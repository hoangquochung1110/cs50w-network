
name: CR

on:
  pull_request:
  push:
    branches: [ main, develop ]

jobs:
  cr:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DJANGO_SETTINGS_MODULE: project4.local
      COMPOSE_PROJECT_NAME: cs50-network
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/local_build.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Cache poetry dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10.4
    - name: Install local dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
    - name: Prepare env
      run: |
        poetry run inv ci.prepare
    - name: Run checks
      run: |
        poetry run python manage.py test --no-input
