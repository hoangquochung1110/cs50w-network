[project]
requires-python = ">=3.8"

[tool.poetry]
name = "cs50w-network"
version = "0.1.0"
description = ""
authors = ["Hung Hoang <arsenalforeversince2007@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
django = "4.2.3"
# https://www.django-rest-framework.org/
djangorestframework = "^3.14.0"
# https://drf-spectacular.readthedocs.io/en/latest/
drf-spectacular = "^0.26.5"

pillow = "^10.0.1"
gunicorn = "^22.0.0"
django-filter = "^23.3"
django-environ = "^0.11.2"
whitenoise = "^6.5.0"
invoke = "^2.2.0"
# A framework for managing and maintaining multi-language pre-commit hooks.
# https://pre-commit.com/
pre-commit = "^3.5.0"
rich = "^13.5.3"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
ipython = "^8.18.1"
django-extensions = "^3.2.3"

[tool.poetry.group.linters.dependencies]
flake8 = "^6.1.0"
# A plugin for Flake8 finding likely bugs and design problems in your program.
# https://github.com/PyCQA/flake8-bugbear
flake8-bugbear = "^23.11.28"
# A flake8 plugin checking common style issues or inconsistencies with pytest-based tests.
# https://github.com/m-burst/flake8-pytest-style
flake8-pytest-style = "^1.7.2"
# A flake8 plugin that warn about backslashes usage.
# https://github.com/wemake-services/flake8-broken-line
flake8-broken-line = "^1.0.0"
# A simple module that adds an extension for the fantastic pydocstyle tool to flake8.
# https://github.com/PyCQA/flake8-docstrings
flake8-docstrings = "^1.7.0"
# A flake8 plugin that checks django code style.
# https://github.com/rocioar/flake8-django
flake8-django = "^1.4"
# Flake8 Extension to lint for quotes.
# https://github.com/zheller/flake8-quotes
flake8-quotes = "^3.3.2"
# A flake8 plug-in loading the configuration from pyproject.toml
# https://pypi.org/project/Flake8-pyproject/
flake8-pyproject = "^1.2.3"
# McCabe complexity checker.
# https://github.com/PyCQA/mccabe
mccabe = "^0.7.0"
# Mypy is a static type checker for Python.
# https://mypy.readthedocs.io/en/stable/
mypy = "^1.11.1"
# This is a PEP 561 type stub package for the `requests` package
# https://pypi.org/project/types-requests/
types-requests = "^2.31.0.10"

[tool.poetry.group.test.dependencies]
# Provides a Django management command to check whether the primary database is ready to accept connections.
# https://pypi.org/project/django-probes/
django-probes = "^1.7.0"
# Plugin for pytest that provides a set of useful tools for testing Django applications and projects
# https://pytest-django.readthedocs.io/en/latest/
pytest-django = "^4.7.0"
# This plugin provides a mocker fixture for pytest
# https://pypi.org/project/pytest-mock/
pytest-mock = "^3.12.0"
# Package for generating test data
# https://factoryboy.readthedocs.io/en/stable/
factory-boy = "^3.3.0"
# Werkzeug is a comprehensive WSGI web application library
# https://werkzeug.palletsprojects.com/en/3.0.x/
werkzeug = "^3.0.1"
# Tool for measuring code coverage of Python programs
# https://coverage.readthedocs.io/en/7.3.2/
coverage = "^7.3.2"
# Psycopg is a PostgreSQL adapter for the Python
# https://www.psycopg.org/docs/install.html
psycopg2-binary = "^2.9.9"

[tool.poetry.group.local.dependencies]
# A Python library for parsing and creating TOML
# https://pypi.org/project/toml/
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
ignore_missing_imports = true
strict = false
warn_no_return = false
check_untyped_defs = true
disallow_any_generics = true
exclude = "venv|/.venv"
